name: Discord Pull Request and Issue Notification

on:
  pull_request:
    types: [opened, closed, reopened, assigned, review_requested]
  issues:
    types: [opened, closed, reopened, assigned, labeled, unlabeled]

jobs:
  send_notification:
    runs-on: ubuntu-latest
    steps:
      - name: Send Discord Notification
        run: |
          EVENT="${{ github.event.action }}"
          USER="${{ github.actor }}"

          MESSAGE=""

          # Check if this is a pull request or issue event
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            PR_NUMBER="${{ github.event.pull_request.number }}"
            PR_TITLE="${{ github.event.pull_request.title }}"
            PR_URL="${{ github.event.pull_request.html_url }}"

            case "$EVENT" in
              opened)
                MESSAGE="üì¢ Pull Request #${PR_NUMBER} has been created! by $USER\nTitle: $PR_TITLE\nURL: $PR_URL"
                ;;
              closed)
                if ${{ github.event.pull_request.merged }}; then
                  MESSAGE="üéâ Pull Request #${PR_NUMBER} has been merged! by $USER\nTitle: $PR_TITLE\nURL: $PR_URL"
                else
                  MESSAGE="‚ùå Pull Request #${PR_NUMBER} has been closed! by $USER\nTitle: $PR_TITLE\nURL: $PR_URL"
                fi
                ;;
              reopened)
                MESSAGE="üîÑ Pull Request #${PR_NUMBER} has been reopened! by $USER\nTitle: $PR_TITLE\nURL: $PR_URL"
                ;;
              assigned)
                MESSAGE="üôã Pull Request #${PR_NUMBER} has been assigned to $USER!\nTitle: $PR_TITLE\nURL: $PR_URL"
                ;;
              review_requested)
                REVIEWER="${{ github.event.requested_reviewers.*.login }}"
                MESSAGE="üëÄ Review for Pull Request #${PR_NUMBER} has been requested from $REVIEWER! by $USER\nTitle: $PR_TITLE\nURL: $PR_URL"
                ;;
              *)
                MESSAGE="Unknown pull request event: $EVENT"
                ;;
            esac
          elif [ "${{ github.event_name }}" = "issues" ]; then
            ISSUE_NUMBER="${{ github.event.issue.number }}"
            ISSUE_TITLE="${{ github.event.issue.title }}"
            ISSUE_URL="${{ github.event.issue.html_url }}"

            case "$EVENT" in
              opened)
                MESSAGE="üêõ Issue #${ISSUE_NUMBER} has been created! by $USER\nTitle: $ISSUE_TITLE\nURL: $ISSUE_URL"
                ;;
              closed)
                MESSAGE="‚úÖ Issue #${ISSUE_NUMBER} has been closed! by $USER\nTitle: $ISSUE_TITLE\nURL: $ISSUE_URL"
                ;;
              reopened)
                MESSAGE="üîÑ Issue #${ISSUE_NUMBER} has been reopened! by $USER\nTitle: $ISSUE_TITLE\nURL: $ISSUE_URL"
                ;;
              assigned)
                ASSIGNEE="${{ github.event.assignee.login }}"
                MESSAGE="üôã Issue #${ISSUE_NUMBER} has been assigned to $ASSIGNEE! by $USER\nTitle: $ISSUE_TITLE\nURL: $ISSUE_URL"
                ;;
              labeled)
                LABEL="${{ github.event.label.name }}"
                MESSAGE="üè∑Ô∏è Label '$LABEL' has been added to Issue #${ISSUE_NUMBER}! by $USER\nTitle: $ISSUE_TITLE\nURL: $ISSUE_URL"
                ;;
              unlabeled)
                LABEL="${{ github.event.label.name }}"
                MESSAGE="üè∑Ô∏è Label '$LABEL' has been removed from Issue #${ISSUE_NUMBER}! by $USER\nTitle: $ISSUE_TITLE\nURL: $ISSUE_URL"
                ;;
              *)
                MESSAGE="Unknown issue event: $EVENT"
                ;;
            esac
          else
            MESSAGE="Unknown event type: ${{ github.event_name }}"
          fi

          curl -X POST \
            -H "Content-Type: application/json" \
            -d "{\"content\": \"$MESSAGE\"}" \
            ${{ secrets.DISCORD_WEBHOOK }}